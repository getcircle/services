services:
  image: lunohq/services
  command: python manage.py runserver 0.0.0.0:8000
  volumes:
    - .:/app
  ports:
    - "8000:8000"
  links:
    - postgres:postgres
    - redis:redis
    - es:es
  env_file: .env
  environment:
    - SERVICES_ENVIRONMENT=local

dev:
  image: lunohq/services-dev
  command: bash
  volumes:
    - .:/app
  links:
    - postgres:postgres
    - redis:redis
    - es:es
  env_file: .env
  environment:
    - DJANGO_SETTINGS_MODULE=services.settings.dev
    - SERVICES_ENVIRONMENT=local-dev

test:
  image: lunohq/services-dev
  command: bash
  volumes:
    - .:/app
  links:
    - postgres:postgres
    - redis:redis
    - es-test:es
  env_file: .env
  environment:
    - DJANGO_SETTINGS_MODULE=services.settings.test
    - SERVICES_ENVIRONMENT=local-test

celery:
  image: lunohq/services
  command: celery -A services -l info worker
  volumes:
    - .:/app
  env_file: .env
  links:
    - postgres:postgres
    - redis:redis
    - es:es

postgres:
  image: postgres:9.4
  ports:
    - "5432:5432"
  volumes_from:
    - postgres-data

redis:
  image: redis:2.8
  ports:
    - "6379:6379"

postgres-data:
  image: postgres:9.4
  volumes:
    - /var/lib/postgresql
  command: "true"

es:
  image: lunohq/es-dev
  volumes_from:
    - es-data
  environment:
    - RUN_AS=root
  command: elasticsearch -Des.network.host=0.0.0.0

es-test:
  image: lunohq/es-test
  environment:
    - RUN_AS=root
  command: elasticsearch -Des.network.host=0.0.0.0

es-data:
  image: ubuntu:14.04
  volumes:
    - /usr/share/elasticsearch/logs
    - /usr/share/elasticsearch/data
    - /usr/share/elasticsearch/plugins
  command: /bin/bash
