services:
  image: lunohq/services
  command: python manage.py runserver 0.0.0.0:8000
  volumes:
    - .:/app
  ports:
    - "8000:8000"
  links:
    - postgres:postgres
    - redis:redis
    - es:es
  env_file: .env

dev:
  image: lunohq/services-dev
  command: bash
  volumes:
    - .:/app
  links:
    - postgres:postgres
    - redis:redis
    - es:es
  env_file: .env
  environment:
    - DJANGO_SETTINGS_MODULE=services.settings.dev

test:
  image: lunohq/services-dev
  command: bash
  volumes:
    - .:/app
  links:
    - postgres:postgres
    - redis:redis
    - es-test:es
  env_file: .env
  environment:
    - DJANGO_SETTINGS_MODULE=services.settings.test

celery:
  image: lunohq/services
  command: celery -A services -l info worker
  volumes:
    - .:/app
  env_file: .env
  links:
    - postgres:postgres
    - redis:redis
    - es:es

postgres:
  image: postgres:9.4
  ports:
    - "5432:5432"
  volumes_from:
    - postgres-data

redis:
  image: redis:2.8
  ports:
    - "6379:6379"

postgres-data:
  image: postgres:9.4
  volumes:
    - /var/lib/postgresql
  command: "true"

es:
  image: elasticsearch:1.5
  volumes_from:
    - es-data
  volumes:
    - ./docker/elasticsearch/config:/data/config
  command: /usr/share/elasticsearch/bin/elasticsearch -Des.config=/data/config/elasticsearch.yml

es-test:
  image: elasticsearch:1.5
  volumes:
    - ./docker/elasticsearch/config:/data/config
  command: /usr/share/elasticsearch/bin/elasticsearch -Des.config=/data/config/elasticsearch.yml

es-data:
  image: ubuntu:14.04
  volumes:
    - /data/logs
    - /data/data
    - /data/plugins
  command: /bin/bash
